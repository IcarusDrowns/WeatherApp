{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amrit\\\\OneDrive\\\\Desktop\\\\weather\\\\src\\\\components\\\\Weather.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  const {\n    weather\n  } = props;\n\n  const getTime = timeStamp => {\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`;\n  };\n\n  const isDay = weather.weather[0].icon.includes(\"d\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `opemweathermap.org/img/wn/${weather.weather[0].icon}`,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [`${Math.floor(weather.main.temp - 273)}C`, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: weather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `${weather.name}, ${weather.sys.country}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `coordinates: ${weather.coord.lon}, ${weather.coord.lat}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `sunrise: ${getTime(weather.sys.sunrise)}, sunset: ${getTime(weather.sys.sunset)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `Min Temp: ${Math.floor(weather.main.temp_min - 273)},Max Temp: ${Math.floor(weather.main.temp_max - 273)} `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/amrit/OneDrive/Desktop/weather/src/components/Weather.js"],"names":["React","Weather","props","weather","getTime","timeStamp","Date","getHours","getMinutes","isDay","icon","includes","Math","floor","main","temp","name","sys","country","coord","lon","lat","sunrise","sunset","temp_min","temp_max"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;;AACA,QAAME,OAAO,GAAIC,SAAD,IAAe;AAC7B,WAAQ,GAAE,IAAIC,IAAJ,CAASD,SAAS,GAAG,IAArB,EAA2BE,QAA3B,EAAsC,MAAK,IAAID,IAAJ,CACnDD,SAAS,GAAG,IADuC,EAEnDG,UAFmD,EAEtC,EAFf;AAGD,GAJD;;AAKA,QAAMC,KAAK,GAAGN,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBO,IAAnB,CAAwBC,QAAxB,CAAiC,GAAjC,CAAd;AACA,sBACE;AAAA,4BACE;AACE,MAAA,GAAG,EAAG,6BAA4BR,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBO,IAAK,EAD5D;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,iBACI,GAAEE,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,IAAR,CAAaC,IAAb,GAAoB,GAA/B,CAAoC,GAD1C,EAC8C,GAD9C,eAEE;AAAA,kBAAOZ,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBW;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAA,gBAAM,GAAEX,OAAO,CAACa,IAAK,KAAIb,OAAO,CAACc,GAAR,CAAYC,OAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,gBAAM,gBAAef,OAAO,CAACgB,KAAR,CAAcC,GAAI,KAAIjB,OAAO,CAACgB,KAAR,CAAcE,GAAI;AAA7D;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,gBAAM,YAAWjB,OAAO,CAACD,OAAO,CAACc,GAAR,CAAYK,OAAb,CAAsB,aAAYlB,OAAO,CAC/DD,OAAO,CAACc,GAAR,CAAYM,MADmD,CAE/D;AAFF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAA,gBAAM,aAAYX,IAAI,CAACC,KAAL,CAChBV,OAAO,CAACW,IAAR,CAAaU,QAAb,GAAwB,GADR,CAEhB,cAAaZ,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,IAAR,CAAaW,QAAb,GAAwB,GAAnC,CAAwC;AAFvD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAqBD;KA7BuBxB,O","sourcesContent":["import React from \"react\";\r\nexport default function Weather(props) {\r\n  const { weather } = props;\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  const isDay = weather.weather[0].icon.includes(\"d\");\r\n  return (\r\n    <>\r\n      <img\r\n        src={`opemweathermap.org/img/wn/${weather.weather[0].icon}`}\r\n        alt=\"\"\r\n      />\r\n      <h3>\r\n        {`${Math.floor(weather.main.temp - 273)}C`}{\" \"}\r\n        <span>{weather.weather[0].main}</span>\r\n      </h3>\r\n      <h3>{`${weather.name}, ${weather.sys.country}`}</h3>\r\n      <h3>Weather Information</h3>\r\n      <h4>{`coordinates: ${weather.coord.lon}, ${weather.coord.lat}`}</h4>\r\n      <h4>{`sunrise: ${getTime(weather.sys.sunrise)}, sunset: ${getTime(\r\n        weather.sys.sunset\r\n      )}`}</h4>\r\n      <h4>{`Min Temp: ${Math.floor(\r\n        weather.main.temp_min - 273\r\n      )},Max Temp: ${Math.floor(weather.main.temp_max - 273)} `}</h4>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}