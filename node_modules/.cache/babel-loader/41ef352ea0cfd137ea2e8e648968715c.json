{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amrit\\\\OneDrive\\\\Desktop\\\\weather\\\\src\\\\components\\\\Weather.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  const {\n    weather\n  } = props;\n\n  const getTime = timeStamp => {\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`;\n  };\n\n  const isDay = weather.weather[0].icon.includes(\"d\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/icons/cloudy-night.svg\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [weather.main.temp, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: weather.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `${weather.name}, ${weather.sys.country}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `coordinates: ${weather.coord.lon}, ${weather.coord.lat}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: `sunrise: ${getTime(weather.sys.sunrise)}, sunset: ${weather.sys.sunset}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/amrit/OneDrive/Desktop/weather/src/components/Weather.js"],"names":["React","Weather","props","weather","getTime","timeStamp","Date","getHours","getMinutes","isDay","icon","includes","main","temp","name","sys","country","coord","lon","lat","sunrise","sunset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;;AACA,QAAME,OAAO,GAAIC,SAAD,IAAe;AAC7B,WAAQ,GAAE,IAAIC,IAAJ,CAASD,SAAS,GAAG,IAArB,EAA2BE,QAA3B,EAAsC,MAAK,IAAID,IAAJ,CACnDD,SAAS,GAAG,IADuC,EAEnDG,UAFmD,EAEtC,EAFf;AAGD,GAJD;;AAKA,QAAMC,KAAK,GAAGN,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBO,IAAnB,CAAwBC,QAAxB,CAAiC,GAAjC,CAAd;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAC,yBAAT;AAAmC,MAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGR,OAAO,CAACS,IAAR,CAAaC,IADhB,oBACsB;AAAA,kBAAOV,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBS;AAA1B;AAAA;AAAA;AAAA;AAAA,cADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBAAM,GAAET,OAAO,CAACW,IAAK,KAAIX,OAAO,CAACY,GAAR,CAAYC,OAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAM,gBAAeb,OAAO,CAACc,KAAR,CAAcC,GAAI,KAAIf,OAAO,CAACc,KAAR,CAAcE,GAAI;AAA7D;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBAAM,YAAWf,OAAO,CAACD,OAAO,CAACY,GAAR,CAAYK,OAAb,CAAsB,aAC5CjB,OAAO,CAACY,GAAR,CAAYM,MACb;AAFD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAcD;KAtBuBpB,O","sourcesContent":["import React from \"react\";\r\nexport default function Weather(props) {\r\n  const { weather } = props;\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  const isDay = weather.weather[0].icon.includes(\"d\");\r\n  return (\r\n    <>\r\n      <img src=\"/icons/cloudy-night.svg\" alt=\"\" />\r\n      <h3>\r\n        {weather.main.temp} <span>{weather.weather[0].main}</span>\r\n      </h3>\r\n      <h3>{`${weather.name}, ${weather.sys.country}`}</h3>\r\n      <h3>Weather Information</h3>\r\n      <h4>{`coordinates: ${weather.coord.lon}, ${weather.coord.lat}`}</h4>\r\n      <h4>{`sunrise: ${getTime(weather.sys.sunrise)}, sunset: ${\r\n        weather.sys.sunset\r\n      }`}</h4>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}